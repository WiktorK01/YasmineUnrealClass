;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyz 
; TEXCOORD                 0   xyzw        1     NONE   float       
; TEXCOORD                 1   xyzw        2     NONE   float   xyzw
; TEXCOORD                 2   xyzw        3     NONE   float   xyzw
; TEXCOORD                 3   xyz         4     NONE   float       
; TEXCOORD                 4   xyz         5     NONE   float       
; TEXCOORD                 5   xyz         6     NONE   float       
; SV_PrimitiveID           0   x           7   PRIMID    uint   x   
; SV_IsFrontFace           0    y          7    FFACE    uint       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 99d3c6ecf72648e5faeb4922b23a28a6
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; TEXCOORD                 3                 linear       
; TEXCOORD                 4                 linear       
; TEXCOORD                 5                 linear       
; SV_PrimitiveID           0        nointerpolation       
; SV_IsFrontFace           0        nointerpolation       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer $Globals
; {
;
;   struct $Globals
;   {
;
;       float4 CPUTexelFactor;                        ; Offset:    0
;       float4 NormalizedComplexity;                  ; Offset:   16
;       int2 AnalysisParams;                          ; Offset:   32
;       float PrimitiveAlpha;                         ; Offset:   40
;       int TexCoordAnalysisIndex;                    ; Offset:   44
;       float CPULogDistance;                         ; Offset:   48
;       uint bShowQuadOverdraw;                       ; Offset:   52
;       uint bOutputQuadOverdraw;                     ; Offset:   56
;       int LODIndex;                                 ; Offset:   60
;       float3 SkinCacheDebugColor;                   ; Offset:   64
;       int VisualizeMode;                            ; Offset:   76
;   
;   } $Globals;                                       ; Offset:    0 Size:    80
;
; }
;
; cbuffer View
; {
;
;   struct hostlayout.View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:   64
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  128
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  192
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  256
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  320
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  384
;       row_major float4x4 View_ViewToClip;           ; Offset:  448
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  512
;       row_major float4x4 View_ClipToView;           ; Offset:  576
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  640
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  768
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  832
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  896
;       row_major float4x4 View_MobileMultiviewDecalTransform;; Offset:  960
;       row_major float4x4 View_FirstPersonTransform; ; Offset: 1024
;       row_major float4x4 View_PrevFirstPersonTransform;; Offset: 1088
;       float3 View_ViewOriginHigh;                   ; Offset: 1152
;       float View_Padding1164;                       ; Offset: 1164
;       float3 View_ViewForward;                      ; Offset: 1168
;       float View_Padding1180;                       ; Offset: 1180
;       float3 View_ViewUp;                           ; Offset: 1184
;       float View_Padding1196;                       ; Offset: 1196
;       float3 View_ViewRight;                        ; Offset: 1200
;       float View_Padding1212;                       ; Offset: 1212
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1216
;       float View_Padding1228;                       ; Offset: 1228
;       float3 View_HMDViewNoRollRight;               ; Offset: 1232
;       float View_Padding1244;                       ; Offset: 1244
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1248
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1264
;       float3 View_ViewOriginLow;                    ; Offset: 1280
;       float View_Padding1292;                       ; Offset: 1292
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1296
;       float View_Padding1308;                       ; Offset: 1308
;       float3 View_WorldViewOriginHigh;              ; Offset: 1312
;       float View_Padding1324;                       ; Offset: 1324
;       float3 View_WorldViewOriginLow;               ; Offset: 1328
;       float View_Padding1340;                       ; Offset: 1340
;       float3 View_PreViewTranslationHigh;           ; Offset: 1344
;       float View_Padding1356;                       ; Offset: 1356
;       float3 View_PreViewTranslationLow;            ; Offset: 1360
;       float View_Padding1372;                       ; Offset: 1372
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1376
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1440
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1504
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1568
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1632
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1696
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1760
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1824
;       float View_Padding1836;                       ; Offset: 1836
;       float3 View_PrevWorldCameraOriginHigh;        ; Offset: 1840
;       float View_Padding1852;                       ; Offset: 1852
;       float3 View_PrevWorldCameraOriginLow;         ; Offset: 1856
;       float View_Padding1868;                       ; Offset: 1868
;       float3 View_PrevWorldViewOriginHigh;          ; Offset: 1872
;       float View_Padding1884;                       ; Offset: 1884
;       float3 View_PrevWorldViewOriginLow;           ; Offset: 1888
;       float View_Padding1900;                       ; Offset: 1900
;       float3 View_PrevPreViewTranslationHigh;       ; Offset: 1904
;       float View_Padding1916;                       ; Offset: 1916
;       float3 View_PrevPreViewTranslationLow;        ; Offset: 1920
;       float View_Padding1932;                       ; Offset: 1932
;       float3 View_ViewTilePosition;                 ; Offset: 1936
;       float View_Padding1948;                       ; Offset: 1948
;       float3 View_RelativeWorldCameraOriginTO;      ; Offset: 1952
;       float View_Padding1964;                       ; Offset: 1964
;       float3 View_RelativeWorldViewOriginTO;        ; Offset: 1968
;       float View_Padding1980;                       ; Offset: 1980
;       float3 View_RelativePreViewTranslationTO;     ; Offset: 1984
;       float View_Padding1996;                       ; Offset: 1996
;       float3 View_PrevRelativeWorldCameraOriginTO;  ; Offset: 2000
;       float View_Padding2012;                       ; Offset: 2012
;       float3 View_PrevRelativeWorldViewOriginTO;    ; Offset: 2016
;       float View_Padding2028;                       ; Offset: 2028
;       float3 View_RelativePrevPreViewTranslationTO; ; Offset: 2032
;       float View_Padding2044;                       ; Offset: 2044
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 2048
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 2112
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 2176
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 2240
;       float4 View_TemporalAAJitter;                 ; Offset: 2304
;       float4 View_GlobalClippingPlane;              ; Offset: 2320
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2336
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2344
;       float4 View_ViewRectMin;                      ; Offset: 2352
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2368
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2384
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2400
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2416
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2432
;       float4 View_ScreenToViewSpace;                ; Offset: 2448
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2464
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2472
;       int View_NumSceneColorMSAASamples;            ; Offset: 2480
;       float View_ProjectionDepthThicknessScale;     ; Offset: 2484
;       float View_PreExposure;                       ; Offset: 2488
;       float View_OneOverPreExposure;                ; Offset: 2492
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2496
;       float4 View_SpecularOverrideParameter;        ; Offset: 2512
;       float4 View_NormalOverrideParameter;          ; Offset: 2528
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2544
;       float View_PrevFrameGameTime;                 ; Offset: 2552
;       float View_PrevFrameRealTime;                 ; Offset: 2556
;       float View_OutOfBoundsMask;                   ; Offset: 2560
;       float View_Padding2564;                       ; Offset: 2564
;       float View_Padding2568;                       ; Offset: 2568
;       float View_Padding2572;                       ; Offset: 2572
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2576
;       float View_CullingSign;                       ; Offset: 2588
;       float View_NearPlane;                         ; Offset: 2592
;       float View_OrthoFarPlane;                     ; Offset: 2596
;       float View_GameTime;                          ; Offset: 2600
;       float View_RealTime;                          ; Offset: 2604
;       float View_DeltaTime;                         ; Offset: 2608
;       float View_MaterialTextureMipBias;            ; Offset: 2612
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2616
;       uint View_Random;                             ; Offset: 2620
;       uint View_FrameNumber;                        ; Offset: 2624
;       uint View_FrameCounter;                       ; Offset: 2628
;       uint View_StateFrameIndexMod8;                ; Offset: 2632
;       uint View_StateFrameIndex;                    ; Offset: 2636
;       uint View_StateOutputFrameIndex;              ; Offset: 2640
;       uint View_DebugViewModeMask;                  ; Offset: 2644
;       uint View_WorldIsPaused;                      ; Offset: 2648
;       float View_CameraCut;                         ; Offset: 2652
;       float View_UnlitViewmodeMask;                 ; Offset: 2656
;       float View_Padding2660;                       ; Offset: 2660
;       float View_Padding2664;                       ; Offset: 2664
;       float View_Padding2668;                       ; Offset: 2668
;       float4 View_DirectionalLightColor;            ; Offset: 2672
;       float3 View_DirectionalLightDirection;        ; Offset: 2688
;       float View_Padding2700;                       ; Offset: 2700
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2704
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2736
;       float4 View_TemporalAAParams;                 ; Offset: 2768
;       float4 View_CircleDOFParams;                  ; Offset: 2784
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2800
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2804
;       float View_DepthOfFieldScale;                 ; Offset: 2808
;       float View_DepthOfFieldFocalLength;           ; Offset: 2812
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2816
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2820
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2824
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2828
;       float View_GeneralPurposeTweak;               ; Offset: 2832
;       float View_GeneralPurposeTweak2;              ; Offset: 2836
;       float View_DemosaicVposOffset;                ; Offset: 2840
;       float View_DecalDepthBias;                    ; Offset: 2844
;       float3 View_IndirectLightingColorScale;       ; Offset: 2848
;       float View_Padding2860;                       ; Offset: 2860
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2864
;       float View_Padding2876;                       ; Offset: 2876
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2880
;       float View_Padding2892;                       ; Offset: 2892
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2896
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2928
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2960
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2992
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 3024
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 3056
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 3072
;       float View_Padding3084;                       ; Offset: 3084
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 3088
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 3104
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 3168
;       float View_SkyAtmospherePresentInScene;       ; Offset: 3184
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 3188
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 3192
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 3196
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 3200
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 3216
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 3220
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 3224
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 3228
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 3232
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 3236
;       float View_Padding3240;                       ; Offset: 3240
;       float View_Padding3244;                       ; Offset: 3244
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 3248
;       float View_RenderingReflectionCaptureMask;    ; Offset: 3260
;       float View_RealTimeReflectionCapture;         ; Offset: 3264
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 3268
;       float View_Padding3272;                       ; Offset: 3272
;       float View_Padding3276;                       ; Offset: 3276
;       float4 View_AmbientCubemapTint;               ; Offset: 3280
;       float View_AmbientCubemapIntensity;           ; Offset: 3296
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 3300
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 3304
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 3308
;       float4 View_SkyLightColor;                    ; Offset: 3312
;       float View_SkyLightVolumetricScatteringIntensity;; Offset: 3328
;       float View_Padding3332;                       ; Offset: 3332
;       float View_Padding3336;                       ; Offset: 3336
;       float View_Padding3340;                       ; Offset: 3340
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3344
;       float View_MobilePreviewMode;                 ; Offset: 3472
;       float View_HMDEyePaddingOffset;               ; Offset: 3476
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3480
;       float View_ShowDecalsMask;                    ; Offset: 3484
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3488
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3492
;       float View_Padding3496;                       ; Offset: 3496
;       float View_Padding3500;                       ; Offset: 3500
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3504
;       int View_StereoPassIndex;                     ; Offset: 3516
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3520
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3616
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3712
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3808
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3904
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3908
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3912
;       int View_Padding3916;                         ; Offset: 3916
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3920
;       float View_Padding3932;                       ; Offset: 3932
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3936
;       float View_GlobalVolumeDimension;             ; Offset: 3948
;       float View_GlobalVolumeTexelSize;             ; Offset: 3952
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3956
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3960
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3964
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3968
;       float View_NotCoveredMinStepScale;            ; Offset: 3972
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3976
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3980
;       float View_ViewportScaleUI;                   ; Offset: 3984
;       float View_Padding3988;                       ; Offset: 3988
;       int2 View_CursorPosition;                     ; Offset: 3992
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 4000
;       float View_Padding4004;                       ; Offset: 4004
;       float View_Padding4008;                       ; Offset: 4008
;       float View_Padding4012;                       ; Offset: 4012
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 4016
;       float View_Padding4028;                       ; Offset: 4028
;       float3 View_VolumetricFogGridZParams;         ; Offset: 4032
;       float View_Padding4044;                       ; Offset: 4044
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 4048
;       float2 View_VolumetricFogViewGridUVToPrevViewRectUV;; Offset: 4056
;       float2 View_VolumetricFogPrevViewGridRectUVToResourceUV;; Offset: 4064
;       float2 View_VolumetricFogPrevUVMax;           ; Offset: 4072
;       float2 View_VolumetricFogPrevUVMaxForTemporalBlend;; Offset: 4080
;       float View_Padding4088;                       ; Offset: 4088
;       float View_Padding4092;                       ; Offset: 4092
;       float3 View_VolumetricFogPrevResourceGridSize;; Offset: 4096
;       float View_Padding4108;                       ; Offset: 4108
;       float2 View_VolumetricFogScreenToResourceUV;  ; Offset: 4112
;       float2 View_VolumetricFogUVMax;               ; Offset: 4120
;       float View_VolumetricFogMaxDistance;          ; Offset: 4128
;       float View_Padding4132;                       ; Offset: 4132
;       float View_Padding4136;                       ; Offset: 4136
;       float View_Padding4140;                       ; Offset: 4140
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 4144
;       float View_Padding4156;                       ; Offset: 4156
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 4160
;       float View_Padding4172;                       ; Offset: 4172
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 4176
;       float View_VolumetricLightmapBrickSize;       ; Offset: 4188
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 4192
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 4204
;       float View_EyeToPixelSpreadAngle;             ; Offset: 4208
;       float View_Padding4212;                       ; Offset: 4212
;       float View_Padding4216;                       ; Offset: 4216
;       float View_Padding4220;                       ; Offset: 4220
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 4224
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 4256
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 4260
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 4264
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 4268
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 4272
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 4276
;       uint View_Padding4280;                        ; Offset: 4280
;       uint View_Padding4284;                        ; Offset: 4284
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 4288
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 4304
;       float View_Padding4312;                       ; Offset: 4312
;       float View_Padding4316;                       ; Offset: 4316
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 4320
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 4336
;       float View_MinRoughness;                      ; Offset: 4340
;       float View_Padding4344;                       ; Offset: 4344
;       float View_Padding4348;                       ; Offset: 4348
;       float4 View_HairRenderInfo;                   ; Offset: 4352
;       uint View_EnableSkyLight;                     ; Offset: 4368
;       uint View_HairRenderInfoBits;                 ; Offset: 4372
;       uint View_HairComponents;                     ; Offset: 4376
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 4380
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 4384
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 4400
;       float4 View_SpecularProfileTextureSizeAndInvSize;; Offset: 4416
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4432
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4444
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4448
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4452
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4456
;       int View_PhysicsFieldTargetCount;             ; Offset: 4460
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4464
;       uint View_GPUSceneViewId;                     ; Offset: 4976
;       float View_ViewResolutionFraction;            ; Offset: 4980
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4984
;       float View_Padding4988;                       ; Offset: 4988
;       float4 View_TanAndInvTanHalfFOV;              ; Offset: 4992
;       float4 View_PrevTanAndInvTanHalfFOV;          ; Offset: 5008
;       float2 View_WorldDepthToPixelWorldRadius;     ; Offset: 5024
;       float View_Padding5032;                       ; Offset: 5032
;       float View_Padding5036;                       ; Offset: 5036
;       float4 View_ScreenRayLengthMultiplier;        ; Offset: 5040
;       float4 View_GlintLUTParameters0;              ; Offset: 5056
;       float4 View_GlintLUTParameters1;              ; Offset: 5072
;       float View_MaterialMaxEmissiveValue;          ; Offset: 5088
;       int View_PostVolumeUserFlags;                 ; Offset: 5092
;       int View_Padding5096;                         ; Offset: 5096
;       int View_Padding5100;                         ; Offset: 5100
;       int4 View_EnvironmentComponentsFlags;         ; Offset: 5104
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 5120
;       uint View_Padding5124;                        ; Offset: 5124
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 5128
;       uint View_Padding5132;                        ; Offset: 5132
;       uint BindlessSRV_View_VolumetricLightmapIndirectionTexture;; Offset: 5136
;       uint View_Padding5140;                        ; Offset: 5140
;       uint BindlessSRV_View_VolumetricLightmapBrickAmbientVector;; Offset: 5144
;       uint View_Padding5148;                        ; Offset: 5148
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 5152
;       uint View_Padding5156;                        ; Offset: 5156
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 5160
;       uint View_Padding5164;                        ; Offset: 5164
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 5168
;       uint View_Padding5172;                        ; Offset: 5172
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 5176
;       uint View_Padding5180;                        ; Offset: 5180
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 5184
;       uint View_Padding5188;                        ; Offset: 5188
;       uint BindlessSRV_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 5192
;       uint View_Padding5196;                        ; Offset: 5196
;       uint BindlessSRV_View_SkyBentNormalBrickTexture;; Offset: 5200
;       uint View_Padding5204;                        ; Offset: 5204
;       uint BindlessSRV_View_DirectionalLightShadowingBrickTexture;; Offset: 5208
;       uint View_Padding5212;                        ; Offset: 5212
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 5216
;       uint View_Padding5220;                        ; Offset: 5220
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 5224
;       uint View_Padding5228;                        ; Offset: 5228
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 5232
;       uint View_Padding5236;                        ; Offset: 5236
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 5240
;       uint View_Padding5244;                        ; Offset: 5244
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 5248
;       uint View_Padding5252;                        ; Offset: 5252
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 5256
;       uint View_Padding5260;                        ; Offset: 5260
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 5264
;       uint View_Padding5268;                        ; Offset: 5268
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 5272
;       uint View_Padding5276;                        ; Offset: 5276
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 5280
;       uint View_Padding5284;                        ; Offset: 5284
;       uint BindlessSRV_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 5288
;       uint View_Padding5292;                        ; Offset: 5292
;       uint BindlessSRV_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 5296
;       uint View_Padding5300;                        ; Offset: 5300
;       uint BindlessSRV_View_GlobalDistanceFieldPageTableTexture;; Offset: 5304
;       uint View_Padding5308;                        ; Offset: 5308
;       uint BindlessSRV_View_GlobalDistanceFieldMipTexture;; Offset: 5312
;       uint View_Padding5316;                        ; Offset: 5316
;       uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler;; Offset: 5320
;       uint View_Padding5324;                        ; Offset: 5324
;       uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler;; Offset: 5328
;       uint View_Padding5332;                        ; Offset: 5332
;       uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler;; Offset: 5336
;       uint View_Padding5340;                        ; Offset: 5340
;       uint BindlessSRV_View_AtmosphereTransmittanceTexture;; Offset: 5344
;       uint View_Padding5348;                        ; Offset: 5348
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 5352
;       uint View_Padding5356;                        ; Offset: 5356
;       uint BindlessSRV_View_AtmosphereIrradianceTexture;; Offset: 5360
;       uint View_Padding5364;                        ; Offset: 5364
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 5368
;       uint View_Padding5372;                        ; Offset: 5372
;       uint BindlessSRV_View_AtmosphereInscatterTexture;; Offset: 5376
;       uint View_Padding5380;                        ; Offset: 5380
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 5384
;       uint View_Padding5388;                        ; Offset: 5388
;       uint BindlessSRV_View_PerlinNoiseGradientTexture;; Offset: 5392
;       uint View_Padding5396;                        ; Offset: 5396
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 5400
;       uint View_Padding5404;                        ; Offset: 5404
;       uint BindlessSRV_View_PerlinNoise3DTexture;   ; Offset: 5408
;       uint View_Padding5412;                        ; Offset: 5412
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 5416
;       uint View_Padding5420;                        ; Offset: 5420
;       uint BindlessSRV_View_SobolSamplingTexture;   ; Offset: 5424
;       uint View_Padding5428;                        ; Offset: 5428
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 5432
;       uint View_Padding5436;                        ; Offset: 5436
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 5440
;       uint View_Padding5444;                        ; Offset: 5444
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 5448
;       uint View_Padding5452;                        ; Offset: 5452
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 5456
;       uint View_Padding5460;                        ; Offset: 5460
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 5464
;       uint View_Padding5468;                        ; Offset: 5468
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 5472
;       uint View_Padding5476;                        ; Offset: 5476
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 5480
;       uint View_Padding5484;                        ; Offset: 5484
;       uint BindlessSRV_View_PreIntegratedBRDF;      ; Offset: 5488
;       uint View_Padding5492;                        ; Offset: 5492
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 5496
;       uint View_Padding5500;                        ; Offset: 5500
;       uint BindlessSRV_View_SkyIrradianceEnvironmentMap;; Offset: 5504
;       uint View_Padding5508;                        ; Offset: 5508
;       uint BindlessSRV_View_TransmittanceLutTexture;; Offset: 5512
;       uint View_Padding5516;                        ; Offset: 5516
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5520
;       uint View_Padding5524;                        ; Offset: 5524
;       uint BindlessSRV_View_SkyViewLutTexture;      ; Offset: 5528
;       uint View_Padding5532;                        ; Offset: 5532
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5536
;       uint View_Padding5540;                        ; Offset: 5540
;       uint BindlessSRV_View_CameraAerialPerspectiveVolume;; Offset: 5544
;       uint View_Padding5548;                        ; Offset: 5548
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5552
;       uint View_Padding5556;                        ; Offset: 5556
;       uint BindlessSRV_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5560
;       uint View_Padding5564;                        ; Offset: 5564
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5568
;       uint View_Padding5572;                        ; Offset: 5572
;       uint BindlessSRV_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5576
;       uint View_Padding5580;                        ; Offset: 5580
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5584
;       uint View_Padding5588;                        ; Offset: 5588
;       uint BindlessSRV_View_DistantSkyLightLutBufferSRV;; Offset: 5592
;       uint View_Padding5596;                        ; Offset: 5596
;       uint BindlessSRV_View_MobileDistantSkyLightLutBufferSRV;; Offset: 5600
;       uint View_Padding5604;                        ; Offset: 5604
;       uint BindlessSRV_View_HairScatteringLUTTexture;; Offset: 5608
;       uint View_Padding5612;                        ; Offset: 5612
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5616
;       uint View_Padding5620;                        ; Offset: 5620
;       uint BindlessSRV_View_GGXLTCMatTexture;       ; Offset: 5624
;       uint View_Padding5628;                        ; Offset: 5628
;       uint BindlessSampler_View_GGXLTCMatSampler;   ; Offset: 5632
;       uint View_Padding5636;                        ; Offset: 5636
;       uint BindlessSRV_View_GGXLTCAmpTexture;       ; Offset: 5640
;       uint View_Padding5644;                        ; Offset: 5644
;       uint BindlessSampler_View_GGXLTCAmpSampler;   ; Offset: 5648
;       uint View_Padding5652;                        ; Offset: 5652
;       uint BindlessSRV_View_SheenLTCTexture;        ; Offset: 5656
;       uint View_Padding5660;                        ; Offset: 5660
;       uint BindlessSampler_View_SheenLTCSampler;    ; Offset: 5664
;       uint View_Padding5668;                        ; Offset: 5668
;       uint View_bShadingEnergyConservation;         ; Offset: 5672
;       uint View_bShadingEnergyPreservation;         ; Offset: 5676
;       uint BindlessSRV_View_ShadingEnergyGGXSpecTexture;; Offset: 5680
;       uint View_Padding5684;                        ; Offset: 5684
;       uint BindlessSRV_View_ShadingEnergyGGXGlassTexture;; Offset: 5688
;       uint View_Padding5692;                        ; Offset: 5692
;       uint BindlessSRV_View_ShadingEnergyClothSpecTexture;; Offset: 5696
;       uint View_Padding5700;                        ; Offset: 5700
;       uint BindlessSRV_View_ShadingEnergyDiffuseTexture;; Offset: 5704
;       uint View_Padding5708;                        ; Offset: 5708
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5712
;       uint View_Padding5716;                        ; Offset: 5716
;       uint BindlessSRV_View_GlintTexture;           ; Offset: 5720
;       uint View_Padding5724;                        ; Offset: 5724
;       uint BindlessSampler_View_GlintSampler;       ; Offset: 5728
;       uint View_Padding5732;                        ; Offset: 5732
;       uint BindlessSRV_View_SimpleVolumeTexture;    ; Offset: 5736
;       uint View_Padding5740;                        ; Offset: 5740
;       uint BindlessSampler_View_SimpleVolumeTextureSampler;; Offset: 5744
;       uint View_Padding5748;                        ; Offset: 5748
;       uint BindlessSRV_View_SimpleVolumeEnvTexture; ; Offset: 5752
;       uint View_Padding5756;                        ; Offset: 5756
;       uint BindlessSampler_View_SimpleVolumeEnvTextureSampler;; Offset: 5760
;       uint View_Padding5764;                        ; Offset: 5764
;       uint BindlessSRV_View_SSProfilesTexture;      ; Offset: 5768
;       uint View_Padding5772;                        ; Offset: 5772
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5776
;       uint View_Padding5780;                        ; Offset: 5780
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5784
;       uint View_Padding5788;                        ; Offset: 5788
;       uint BindlessSRV_View_SSProfilesPreIntegratedTexture;; Offset: 5792
;       uint View_Padding5796;                        ; Offset: 5796
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5800
;       uint View_Padding5804;                        ; Offset: 5804
;       uint BindlessSRV_View_SpecularProfileTexture; ; Offset: 5808
;       uint View_Padding5812;                        ; Offset: 5812
;       uint BindlessSampler_View_SpecularProfileSampler;; Offset: 5816
;       uint View_Padding5820;                        ; Offset: 5820
;       uint BindlessSRV_View_WaterIndirection;       ; Offset: 5824
;       uint View_Padding5828;                        ; Offset: 5828
;       uint BindlessSRV_View_WaterData;              ; Offset: 5832
;       uint View_Padding5836;                        ; Offset: 5836
;       int View_WaterInfoTextureViewIndex;           ; Offset: 5840
;       int View_Padding5844;                         ; Offset: 5844
;       int View_Padding5848;                         ; Offset: 5848
;       int View_Padding5852;                         ; Offset: 5852
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5856
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5872
;       float View_Padding5876;                       ; Offset: 5876
;       uint BindlessSRV_View_RectLightAtlasTexture;  ; Offset: 5880
;       uint View_Padding5884;                        ; Offset: 5884
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5888
;       uint View_Padding5892;                        ; Offset: 5892
;       uint View_Padding5896;                        ; Offset: 5896
;       uint View_Padding5900;                        ; Offset: 5900
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5904
;       uint BindlessSRV_View_IESAtlasTexture;        ; Offset: 5920
;       uint View_Padding5924;                        ; Offset: 5924
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5928
;       uint View_Padding5932;                        ; Offset: 5932
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5936
;       uint View_Padding5940;                        ; Offset: 5940
;       uint BindlessSRV_View_LandscapeIndirection;   ; Offset: 5944
;       uint View_Padding5948;                        ; Offset: 5948
;       uint BindlessSRV_View_LandscapePerComponentData;; Offset: 5952
;       uint View_Padding5956;                        ; Offset: 5956
;       uint BindlessUAV_View_VTFeedbackBuffer;       ; Offset: 5960
;       uint View_Padding5964;                        ; Offset: 5964
;       uint BindlessSRV_View_PhysicsFieldClipmapBuffer;; Offset: 5968
;       uint View_Padding5972;                        ; Offset: 5972
;       uint View_Padding5976;                        ; Offset: 5976
;       uint View_Padding5980;                        ; Offset: 5980
;       float3 View_TLASPreViewTranslationHigh;       ; Offset: 5984
;       float View_Padding5996;                       ; Offset: 5996
;       float3 View_TLASPreViewTranslationLow;        ; Offset: 6000
;   
;   } View;                                           ; Offset:    0 Size:  6012
;
; }
;
; cbuffer DebugViewModePass
; {
;
;   struct DebugViewModePass
;   {
;
;       uint BindlessSRV_DebugViewModePass_SceneTextures_SceneColorTexture;; Offset:    0
;       uint DebugViewModePass_Padding4;              ; Offset:    4
;       uint BindlessSRV_DebugViewModePass_SceneTextures_SceneDepthTexture;; Offset:    8
;       uint DebugViewModePass_Padding12;             ; Offset:   12
;       uint BindlessSRV_DebugViewModePass_SceneTextures_ScenePartialDepthTexture;; Offset:   16
;       uint DebugViewModePass_Padding20;             ; Offset:   20
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferATexture;; Offset:   24
;       uint DebugViewModePass_Padding28;             ; Offset:   28
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferBTexture;; Offset:   32
;       uint DebugViewModePass_Padding36;             ; Offset:   36
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferCTexture;; Offset:   40
;       uint DebugViewModePass_Padding44;             ; Offset:   44
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferDTexture;; Offset:   48
;       uint DebugViewModePass_Padding52;             ; Offset:   52
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferETexture;; Offset:   56
;       uint DebugViewModePass_Padding60;             ; Offset:   60
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferFTexture;; Offset:   64
;       uint DebugViewModePass_Padding68;             ; Offset:   68
;       uint BindlessSRV_DebugViewModePass_SceneTextures_GBufferVelocityTexture;; Offset:   72
;       uint DebugViewModePass_Padding76;             ; Offset:   76
;       uint BindlessSRV_DebugViewModePass_SceneTextures_ScreenSpaceAOTexture;; Offset:   80
;       uint DebugViewModePass_Padding84;             ; Offset:   84
;       uint BindlessSRV_DebugViewModePass_SceneTextures_CustomDepthTexture;; Offset:   88
;       uint DebugViewModePass_Padding92;             ; Offset:   92
;       uint BindlessSRV_DebugViewModePass_SceneTextures_CustomStencilTexture;; Offset:   96
;       uint DebugViewModePass_Padding100;            ; Offset:  100
;       uint BindlessSampler_DebugViewModePass_SceneTextures_PointClampSampler;; Offset:  104
;       float DebugViewModePass_Padding108;           ; Offset:  108
;       float4 DebugViewModePass_DebugViewMode_AccuracyColors[5];; Offset:  112
;       float4 DebugViewModePass_DebugViewMode_LODColors[8];; Offset:  192
;       uint BindlessUAV_DebugViewModePass_QuadOverdraw;; Offset:  320
;   
;   } DebugViewModePass;                              ; Offset:    0 Size:   324
;
; }
;
; cbuffer Material
; {
;
;   struct Material
;   {
;
;       float4 Material_PreshaderBuffer[1];           ; Offset:    0
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:   16
;       uint Material_Padding20;                      ; Offset:   20
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:   24
;   
;   } Material;                                       ; Offset:    0 Size:    28
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; $Globals                          cbuffer      NA          NA     CB0            cb0     1
; View                              cbuffer      NA          NA     CB1            cb1     1
; DebugViewModePass                 cbuffer      NA          NA     CB2            cb2     1
; Material                          cbuffer      NA          NA     CB3            cb3     1
; DebugViewModePass_QuadOverdraw        UAV     u32          2d      U0             u0     1
;
;
; ViewId state:
;
; Number of inputs: 30, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 28 }
;   output 1 depends on inputs: { 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15 }
;   output 2 depends on inputs: { 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%"$Globals" = type { <4 x float>, <4 x float>, <2 x i32>, float, i32, float, i32, i32, i32, <3 x float>, i32 }
%hostlayout.View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, float, float, <2 x i32>, float, float, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, float, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, i32, float, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, float, float, float, <4 x float>, <4 x float>, <2 x float>, float, float, <4 x float>, <4 x float>, <4 x float>, float, i32, i32, i32, <4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%DebugViewModePass = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, [5 x <4 x float>], [8 x <4 x float>], i32 }
%Material = type { [1 x <4 x float>], i32, i32, i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %7 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 13, i32 324 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %8 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 13, i32 6012 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %9 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 13, i32 80 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %10 = call i32 @dx.op.loadInput.i32(i32 4, i32 7, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !22  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 44)  ; CBufferLoadLegacy(handle,regIndex)
  %23 = extractvalue %dx.types.CBufRet.f32 %22, 0
  %24 = extractvalue %dx.types.CBufRet.f32 %22, 1
  %25 = extractvalue %dx.types.CBufRet.f32 %22, 2
  %26 = extractvalue %dx.types.CBufRet.f32 %22, 3
  %27 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 45)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.f32 %27, 0
  %29 = extractvalue %dx.types.CBufRet.f32 %27, 1
  %30 = extractvalue %dx.types.CBufRet.f32 %27, 2
  %31 = extractvalue %dx.types.CBufRet.f32 %27, 3
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 46)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %34 = extractvalue %dx.types.CBufRet.f32 %32, 1
  %35 = extractvalue %dx.types.CBufRet.f32 %32, 2
  %36 = extractvalue %dx.types.CBufRet.f32 %32, 3
  %37 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 47)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.f32 %37, 0
  %39 = extractvalue %dx.types.CBufRet.f32 %37, 1
  %40 = extractvalue %dx.types.CBufRet.f32 %37, 2
  %41 = extractvalue %dx.types.CBufRet.f32 %37, 3
  %42 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %43 = extractvalue %dx.types.CBufRet.i32 %42, 3
  %44 = add i32 %43, -1
  %45 = icmp ult i32 %44, 4
  %46 = icmp eq i32 %43, 13
  %47 = or i1 %45, %46
  br i1 %47, label %48, label %124, !dx.controlflow.hints !38

; <label>:48                                      ; preds = %0
  %49 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  br i1 %51, label %675, label %56

; <label>:56                                      ; preds = %48
  %57 = extractvalue %dx.types.CBufRet.i32 %49, 1
  %58 = icmp ne i32 %57, 0
  %59 = fcmp fast ogt float %53, 0.000000e+00
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %675, !dx.controlflow.hints !39

; <label>:61                                      ; preds = %56
  %62 = fptoui float %19 to i32
  %63 = fptoui float %20 to i32
  %64 = lshr i32 %62, 1
  %65 = lshr i32 %63, 1
  br label %66

; <label>:66                                      ; preds = %109, %61
  %67 = phi i32 [ 0, %61 ], [ %110, %109 ]
  %68 = phi i32 [ 3, %61 ], [ %94, %109 ]
  %69 = phi i32 [ 0, %61 ], [ %111, %109 ]
  %70 = icmp eq i32 %67, 1
  br i1 %70, label %71, label %81, !dx.controlflow.hints !40

; <label>:71                                      ; preds = %66
  %72 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  %73 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %72, i32 undef, i32 %64, i32 %65, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %74 = extractvalue %dx.types.ResRet.i32 %73, 0
  %75 = lshr i32 %74, 2
  %76 = add nsw i32 %75, -1
  %77 = icmp ne i32 %76, %10
  %78 = and i32 %74, 3
  %79 = select i1 %77, i32 -1, i32 1
  %80 = select i1 %77, i32 %68, i32 %78
  br label %81

; <label>:81                                      ; preds = %71, %66
  %82 = phi i32 [ %67, %66 ], [ %79, %71 ]
  %83 = phi i32 [ %68, %66 ], [ %80, %71 ]
  %84 = icmp eq i32 %82, 2
  br i1 %84, label %85, label %92, !dx.controlflow.hints !41

; <label>:85                                      ; preds = %81
  %86 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  %87 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %86, i32 undef, i32 %64, i32 %65, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %88 = extractvalue %dx.types.ResRet.i32 %87, 0
  %89 = and i32 %88, 3
  %90 = icmp eq i32 %89, %83
  br i1 %90, label %91, label %92, !dx.controlflow.hints !42

; <label>:91                                      ; preds = %85
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %86, i32 %64, i32 %65, i32 undef, i32 0, i32 0, i32 0, i32 0, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %92

; <label>:92                                      ; preds = %91, %85, %81
  %93 = phi i32 [ -1, %91 ], [ %82, %81 ], [ 2, %85 ]
  %94 = phi i32 [ %83, %91 ], [ %83, %81 ], [ %89, %85 ]
  %95 = icmp eq i32 %93, 0
  br i1 %95, label %96, label %109, !dx.controlflow.hints !43

; <label>:96                                      ; preds = %92
  %97 = shl i32 %10, 2
  %98 = add i32 %97, 4
  %99 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  %100 = call i32 @dx.op.atomicCompareExchange.i32(i32 79, %dx.types.Handle %99, i32 %64, i32 %65, i32 undef, i32 0, i32 %98)  ; AtomicCompareExchange(handle,offset0,offset1,offset2,compareValue,newValue)
  %101 = icmp eq i32 %100, 0
  %102 = select i1 %101, i32 2, i32 0
  %103 = lshr i32 %100, 2
  %104 = add nsw i32 %103, -1
  %105 = icmp eq i32 %104, %10
  br i1 %105, label %106, label %109, !dx.controlflow.hints !44

; <label>:106                                     ; preds = %96
  %107 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  %108 = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %107, i32 0, i32 %64, i32 %65, i32 undef, i32 1)  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  br label %109

; <label>:109                                     ; preds = %106, %96, %92
  %110 = phi i32 [ 1, %106 ], [ %102, %96 ], [ %93, %92 ]
  %111 = add nuw nsw i32 %69, 1
  %112 = icmp eq i32 %111, 24
  br i1 %112, label %113, label %66, !llvm.loop !45

; <label>:113                                     ; preds = %109
  %114 = icmp eq i32 %110, 2
  br i1 %114, label %115, label %117, !dx.controlflow.hints !47

; <label>:115                                     ; preds = %113
  %116 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %116, i32 %64, i32 %65, i32 undef, i32 0, i32 0, i32 0, i32 0, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %117

; <label>:117                                     ; preds = %115, %113
  %118 = icmp ne i32 %110, -2
  %119 = add i32 %94, 1
  %120 = uitofp i32 %119 to float
  %121 = fdiv fast float 4.000000e+00, %120
  %122 = select i1 %118, float %121, float 0x7FF0000000000000
  %123 = fmul fast float %122, %53
  br label %675

; <label>:124                                     ; preds = %0
  %125 = icmp eq i32 %43, 5
  br i1 %125, label %126, label %190

; <label>:126                                     ; preds = %124
  %127 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %128 = extractvalue %dx.types.CBufRet.f32 %127, 0
  %129 = fcmp fast ult float %128, 0.000000e+00
  br i1 %129, label %184, label %130

; <label>:130                                     ; preds = %126
  %131 = fmul fast float %23, %19
  %132 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %131)  ; FMad(a,b,c)
  %133 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %132)  ; FMad(a,b,c)
  %134 = fadd fast float %133, %38
  %135 = fmul fast float %24, %19
  %136 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %135)  ; FMad(a,b,c)
  %137 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %136)  ; FMad(a,b,c)
  %138 = fadd fast float %137, %39
  %139 = fmul fast float %25, %19
  %140 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %139)  ; FMad(a,b,c)
  %141 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %140)  ; FMad(a,b,c)
  %142 = fadd fast float %141, %40
  %143 = fmul fast float %26, %19
  %144 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %143)  ; FMad(a,b,c)
  %145 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %144)  ; FMad(a,b,c)
  %146 = fadd fast float %145, %41
  %147 = fdiv fast float %134, %146
  %148 = fdiv fast float %138, %146
  %149 = fdiv fast float %142, %146
  %150 = fmul fast float %147, %147
  %151 = fmul fast float %148, %148
  %152 = fadd fast float %151, %150
  %153 = fmul fast float %149, %149
  %154 = fadd fast float %152, %153
  %155 = call float @dx.op.unary.f32(i32 24, float %154)  ; Sqrt(value)
  %156 = call float @dx.op.binary.f32(i32 35, float 1.000000e+00, float %155)  ; FMax(a,b)
  %157 = call float @dx.op.unary.f32(i32 23, float %156)  ; Log(value)
  %158 = fsub fast float %157, %128
  %159 = call float @dx.op.binary.f32(i32 35, float %158, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %160 = call float @dx.op.binary.f32(i32 36, float %159, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %161 = call float @dx.op.unary.f32(i32 27, float %160)  ; Round_ni(value)
  %162 = fadd fast float %161, 2.000000e+00
  %163 = fptosi float %162 to i32
  %164 = call float @dx.op.unary.f32(i32 22, float %160)  ; Frc(value)
  %165 = add i32 %163, 8
  %166 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %165)  ; CBufferLoadLegacy(handle,regIndex)
  %167 = extractvalue %dx.types.CBufRet.f32 %166, 0
  %168 = extractvalue %dx.types.CBufRet.f32 %166, 1
  %169 = extractvalue %dx.types.CBufRet.f32 %166, 2
  %170 = add i32 %163, 7
  %171 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %170)  ; CBufferLoadLegacy(handle,regIndex)
  %172 = extractvalue %dx.types.CBufRet.f32 %171, 0
  %173 = extractvalue %dx.types.CBufRet.f32 %171, 1
  %174 = extractvalue %dx.types.CBufRet.f32 %171, 2
  %175 = fsub fast float %167, %172
  %176 = fsub fast float %168, %173
  %177 = fsub fast float %169, %174
  %178 = fmul fast float %175, %164
  %179 = fmul fast float %176, %164
  %180 = fmul fast float %177, %164
  %181 = fadd fast float %178, %172
  %182 = fadd fast float %179, %173
  %183 = fadd fast float %180, %174
  br label %184

; <label>:184                                     ; preds = %130, %126
  %185 = phi float [ %181, %130 ], [ 0x3F8EB851E0000000, %126 ]
  %186 = phi float [ %182, %130 ], [ 0x3F8EB851E0000000, %126 ]
  %187 = phi float [ %183, %130 ], [ 0x3F8EB851E0000000, %126 ]
  %188 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %189 = extractvalue %dx.types.CBufRet.f32 %188, 2
  br label %675

; <label>:190                                     ; preds = %124
  %191 = icmp eq i32 %43, 6
  br i1 %191, label %192, label %598

; <label>:192                                     ; preds = %190
  %193 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %194 = extractvalue %dx.types.CBufRet.i32 %193, 3
  %195 = icmp sgt i32 %194, -1
  %196 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  br i1 %195, label %197, label %303

; <label>:197                                     ; preds = %192
  %198 = icmp eq i32 %194, 0
  br i1 %198, label %199, label %201, !dx.controlflow.hints !48

; <label>:199                                     ; preds = %197
  %200 = extractvalue %dx.types.CBufRet.f32 %196, 0
  br label %211

; <label>:201                                     ; preds = %197
  %202 = icmp eq i32 %194, 1
  br i1 %202, label %203, label %205, !dx.controlflow.hints !49

; <label>:203                                     ; preds = %201
  %204 = extractvalue %dx.types.CBufRet.f32 %196, 1
  br label %211

; <label>:205                                     ; preds = %201
  %206 = icmp eq i32 %194, 2
  br i1 %206, label %207, label %209, !dx.controlflow.hints !50

; <label>:207                                     ; preds = %205
  %208 = extractvalue %dx.types.CBufRet.f32 %196, 2
  br label %211

; <label>:209                                     ; preds = %205
  %210 = extractvalue %dx.types.CBufRet.f32 %196, 3
  br label %211

; <label>:211                                     ; preds = %209, %207, %203, %199
  %212 = phi float [ %200, %199 ], [ %204, %203 ], [ %208, %207 ], [ %210, %209 ]
  %213 = fcmp fast ogt float %212, 0.000000e+00
  br i1 %213, label %214, label %592

; <label>:214                                     ; preds = %211
  %215 = fmul fast float %23, %19
  %216 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %215)  ; FMad(a,b,c)
  %217 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %216)  ; FMad(a,b,c)
  %218 = fadd fast float %217, %38
  %219 = fmul fast float %24, %19
  %220 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %219)  ; FMad(a,b,c)
  %221 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %220)  ; FMad(a,b,c)
  %222 = fadd fast float %221, %39
  %223 = fmul fast float %25, %19
  %224 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %223)  ; FMad(a,b,c)
  %225 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %224)  ; FMad(a,b,c)
  %226 = fadd fast float %225, %40
  %227 = fmul fast float %26, %19
  %228 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %227)  ; FMad(a,b,c)
  %229 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %228)  ; FMad(a,b,c)
  %230 = fadd fast float %229, %41
  %231 = fdiv fast float %218, %230
  %232 = fdiv fast float %222, %230
  %233 = fdiv fast float %226, %230
  br i1 %198, label %240, label %234, !dx.controlflow.hints !51

; <label>:234                                     ; preds = %214
  %235 = icmp eq i32 %194, 1
  br i1 %235, label %240, label %236, !dx.controlflow.hints !52

; <label>:236                                     ; preds = %234
  %237 = icmp eq i32 %194, 2
  %238 = select i1 %237, float %11, float %13
  %239 = select i1 %237, float %12, float %14
  br label %240

; <label>:240                                     ; preds = %236, %234, %214
  %241 = phi float [ %15, %214 ], [ %17, %234 ], [ %238, %236 ]
  %242 = phi float [ %16, %214 ], [ %18, %234 ], [ %239, %236 ]
  %243 = call float @dx.op.unary.f32(i32 85, float %241)  ; DerivFineX(value)
  %244 = call float @dx.op.unary.f32(i32 85, float %242)  ; DerivFineX(value)
  %245 = call float @dx.op.unary.f32(i32 86, float %241)  ; DerivFineY(value)
  %246 = call float @dx.op.unary.f32(i32 86, float %242)  ; DerivFineY(value)
  %247 = call float @dx.op.unary.f32(i32 85, float %231)  ; DerivFineX(value)
  %248 = call float @dx.op.unary.f32(i32 85, float %232)  ; DerivFineX(value)
  %249 = call float @dx.op.unary.f32(i32 85, float %233)  ; DerivFineX(value)
  %250 = call float @dx.op.unary.f32(i32 86, float %231)  ; DerivFineY(value)
  %251 = call float @dx.op.unary.f32(i32 86, float %232)  ; DerivFineY(value)
  %252 = call float @dx.op.unary.f32(i32 86, float %233)  ; DerivFineY(value)
  %253 = fmul fast float %246, %243
  %254 = fmul fast float %245, %244
  %255 = fsub fast float %253, %254
  %256 = call float @dx.op.unary.f32(i32 6, float %255)  ; FAbs(value)
  %257 = fmul fast float %252, %248
  %258 = fmul fast float %251, %249
  %259 = fsub fast float %257, %258
  %260 = fmul fast float %250, %249
  %261 = fmul fast float %252, %247
  %262 = fsub fast float %260, %261
  %263 = fmul fast float %251, %247
  %264 = fmul fast float %250, %248
  %265 = fsub fast float %263, %264
  %266 = fmul fast float %259, %259
  %267 = fmul fast float %262, %262
  %268 = fmul fast float %265, %265
  %269 = fadd fast float %267, %268
  %270 = fadd fast float %269, %266
  %271 = call float @dx.op.unary.f32(i32 24, float %270)  ; Sqrt(value)
  %272 = call float @dx.op.binary.f32(i32 35, float %256, float 0x3DDB7CDFE0000000)  ; FMax(a,b)
  %273 = fdiv fast float %271, %272
  %274 = call float @dx.op.unary.f32(i32 24, float %273)  ; Sqrt(value)
  %275 = call float @dx.op.unary.f32(i32 23, float %212)  ; Log(value)
  %276 = call float @dx.op.unary.f32(i32 23, float %274)  ; Log(value)
  %277 = fsub fast float %275, %276
  %278 = call float @dx.op.binary.f32(i32 35, float %277, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %279 = call float @dx.op.binary.f32(i32 36, float %278, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %280 = call float @dx.op.unary.f32(i32 27, float %279)  ; Round_ni(value)
  %281 = fadd fast float %280, 2.000000e+00
  %282 = fptosi float %281 to i32
  %283 = call float @dx.op.unary.f32(i32 22, float %279)  ; Frc(value)
  %284 = add i32 %282, 8
  %285 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %284)  ; CBufferLoadLegacy(handle,regIndex)
  %286 = extractvalue %dx.types.CBufRet.f32 %285, 0
  %287 = extractvalue %dx.types.CBufRet.f32 %285, 1
  %288 = extractvalue %dx.types.CBufRet.f32 %285, 2
  %289 = add i32 %282, 7
  %290 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %289)  ; CBufferLoadLegacy(handle,regIndex)
  %291 = extractvalue %dx.types.CBufRet.f32 %290, 0
  %292 = extractvalue %dx.types.CBufRet.f32 %290, 1
  %293 = extractvalue %dx.types.CBufRet.f32 %290, 2
  %294 = fsub fast float %286, %291
  %295 = fsub fast float %287, %292
  %296 = fsub fast float %288, %293
  %297 = fmul fast float %294, %283
  %298 = fmul fast float %295, %283
  %299 = fmul fast float %296, %283
  %300 = fadd fast float %297, %291
  %301 = fadd fast float %298, %292
  %302 = fadd fast float %299, %293
  br label %592

; <label>:303                                     ; preds = %192
  %304 = extractvalue %dx.types.CBufRet.f32 %196, 0
  %305 = fcmp fast ogt float %304, 0.000000e+00
  br i1 %305, label %306, label %365

; <label>:306                                     ; preds = %303
  %307 = fmul fast float %23, %19
  %308 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %307)  ; FMad(a,b,c)
  %309 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %308)  ; FMad(a,b,c)
  %310 = fadd fast float %309, %38
  %311 = fmul fast float %24, %19
  %312 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %311)  ; FMad(a,b,c)
  %313 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %312)  ; FMad(a,b,c)
  %314 = fadd fast float %313, %39
  %315 = fmul fast float %25, %19
  %316 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %315)  ; FMad(a,b,c)
  %317 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %316)  ; FMad(a,b,c)
  %318 = fadd fast float %317, %40
  %319 = fmul fast float %26, %19
  %320 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %319)  ; FMad(a,b,c)
  %321 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %320)  ; FMad(a,b,c)
  %322 = fadd fast float %321, %41
  %323 = fdiv fast float %310, %322
  %324 = fdiv fast float %314, %322
  %325 = fdiv fast float %318, %322
  %326 = call float @dx.op.unary.f32(i32 85, float %15)  ; DerivFineX(value)
  %327 = call float @dx.op.unary.f32(i32 85, float %16)  ; DerivFineX(value)
  %328 = call float @dx.op.unary.f32(i32 86, float %15)  ; DerivFineY(value)
  %329 = call float @dx.op.unary.f32(i32 86, float %16)  ; DerivFineY(value)
  %330 = call float @dx.op.unary.f32(i32 85, float %323)  ; DerivFineX(value)
  %331 = call float @dx.op.unary.f32(i32 85, float %324)  ; DerivFineX(value)
  %332 = call float @dx.op.unary.f32(i32 85, float %325)  ; DerivFineX(value)
  %333 = call float @dx.op.unary.f32(i32 86, float %323)  ; DerivFineY(value)
  %334 = call float @dx.op.unary.f32(i32 86, float %324)  ; DerivFineY(value)
  %335 = call float @dx.op.unary.f32(i32 86, float %325)  ; DerivFineY(value)
  %336 = fmul fast float %329, %326
  %337 = fmul fast float %328, %327
  %338 = fsub fast float %336, %337
  %339 = call float @dx.op.unary.f32(i32 6, float %338)  ; FAbs(value)
  %340 = fmul fast float %335, %331
  %341 = fmul fast float %334, %332
  %342 = fsub fast float %340, %341
  %343 = fmul fast float %333, %332
  %344 = fmul fast float %335, %330
  %345 = fsub fast float %343, %344
  %346 = fmul fast float %334, %330
  %347 = fmul fast float %333, %331
  %348 = fsub fast float %346, %347
  %349 = fmul fast float %342, %342
  %350 = fmul fast float %345, %345
  %351 = fmul fast float %348, %348
  %352 = fadd fast float %350, %351
  %353 = fadd fast float %352, %349
  %354 = call float @dx.op.unary.f32(i32 24, float %353)  ; Sqrt(value)
  %355 = call float @dx.op.binary.f32(i32 35, float %339, float 0x3DDB7CDFE0000000)  ; FMax(a,b)
  %356 = fdiv fast float %354, %355
  %357 = call float @dx.op.unary.f32(i32 24, float %356)  ; Sqrt(value)
  %358 = call float @dx.op.unary.f32(i32 23, float %304)  ; Log(value)
  %359 = call float @dx.op.unary.f32(i32 23, float %357)  ; Log(value)
  %360 = fsub fast float %358, %359
  %361 = call float @dx.op.binary.f32(i32 35, float %360, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %362 = call float @dx.op.binary.f32(i32 36, float %361, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %363 = call float @dx.op.binary.f32(i32 36, float %362, float 1.024000e+03)  ; FMin(a,b)
  %364 = call float @dx.op.binary.f32(i32 35, float %362, float -1.024000e+03)  ; FMax(a,b)
  br label %365

; <label>:365                                     ; preds = %306, %303
  %366 = phi float [ %363, %306 ], [ 1.024000e+03, %303 ]
  %367 = phi float [ %364, %306 ], [ -1.024000e+03, %303 ]
  %368 = extractvalue %dx.types.CBufRet.f32 %196, 1
  %369 = fcmp fast ogt float %368, 0.000000e+00
  br i1 %369, label %370, label %429

; <label>:370                                     ; preds = %365
  %371 = fmul fast float %23, %19
  %372 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %371)  ; FMad(a,b,c)
  %373 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %372)  ; FMad(a,b,c)
  %374 = fadd fast float %373, %38
  %375 = fmul fast float %24, %19
  %376 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %375)  ; FMad(a,b,c)
  %377 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %376)  ; FMad(a,b,c)
  %378 = fadd fast float %377, %39
  %379 = fmul fast float %25, %19
  %380 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %379)  ; FMad(a,b,c)
  %381 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %380)  ; FMad(a,b,c)
  %382 = fadd fast float %381, %40
  %383 = fmul fast float %26, %19
  %384 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %383)  ; FMad(a,b,c)
  %385 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %384)  ; FMad(a,b,c)
  %386 = fadd fast float %385, %41
  %387 = fdiv fast float %374, %386
  %388 = fdiv fast float %378, %386
  %389 = fdiv fast float %382, %386
  %390 = call float @dx.op.unary.f32(i32 85, float %17)  ; DerivFineX(value)
  %391 = call float @dx.op.unary.f32(i32 85, float %18)  ; DerivFineX(value)
  %392 = call float @dx.op.unary.f32(i32 86, float %17)  ; DerivFineY(value)
  %393 = call float @dx.op.unary.f32(i32 86, float %18)  ; DerivFineY(value)
  %394 = call float @dx.op.unary.f32(i32 85, float %387)  ; DerivFineX(value)
  %395 = call float @dx.op.unary.f32(i32 85, float %388)  ; DerivFineX(value)
  %396 = call float @dx.op.unary.f32(i32 85, float %389)  ; DerivFineX(value)
  %397 = call float @dx.op.unary.f32(i32 86, float %387)  ; DerivFineY(value)
  %398 = call float @dx.op.unary.f32(i32 86, float %388)  ; DerivFineY(value)
  %399 = call float @dx.op.unary.f32(i32 86, float %389)  ; DerivFineY(value)
  %400 = fmul fast float %393, %390
  %401 = fmul fast float %392, %391
  %402 = fsub fast float %400, %401
  %403 = call float @dx.op.unary.f32(i32 6, float %402)  ; FAbs(value)
  %404 = fmul fast float %399, %395
  %405 = fmul fast float %398, %396
  %406 = fsub fast float %404, %405
  %407 = fmul fast float %397, %396
  %408 = fmul fast float %399, %394
  %409 = fsub fast float %407, %408
  %410 = fmul fast float %398, %394
  %411 = fmul fast float %397, %395
  %412 = fsub fast float %410, %411
  %413 = fmul fast float %406, %406
  %414 = fmul fast float %409, %409
  %415 = fmul fast float %412, %412
  %416 = fadd fast float %414, %415
  %417 = fadd fast float %416, %413
  %418 = call float @dx.op.unary.f32(i32 24, float %417)  ; Sqrt(value)
  %419 = call float @dx.op.binary.f32(i32 35, float %403, float 0x3DDB7CDFE0000000)  ; FMax(a,b)
  %420 = fdiv fast float %418, %419
  %421 = call float @dx.op.unary.f32(i32 24, float %420)  ; Sqrt(value)
  %422 = call float @dx.op.unary.f32(i32 23, float %368)  ; Log(value)
  %423 = call float @dx.op.unary.f32(i32 23, float %421)  ; Log(value)
  %424 = fsub fast float %422, %423
  %425 = call float @dx.op.binary.f32(i32 35, float %424, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %426 = call float @dx.op.binary.f32(i32 36, float %425, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %427 = call float @dx.op.binary.f32(i32 36, float %426, float %366)  ; FMin(a,b)
  %428 = call float @dx.op.binary.f32(i32 35, float %426, float %367)  ; FMax(a,b)
  br label %429

; <label>:429                                     ; preds = %370, %365
  %430 = phi float [ %427, %370 ], [ %366, %365 ]
  %431 = phi float [ %428, %370 ], [ %367, %365 ]
  %432 = extractvalue %dx.types.CBufRet.f32 %196, 2
  %433 = fcmp fast ogt float %432, 0.000000e+00
  br i1 %433, label %434, label %493

; <label>:434                                     ; preds = %429
  %435 = fmul fast float %23, %19
  %436 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %435)  ; FMad(a,b,c)
  %437 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %436)  ; FMad(a,b,c)
  %438 = fadd fast float %437, %38
  %439 = fmul fast float %24, %19
  %440 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %439)  ; FMad(a,b,c)
  %441 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %440)  ; FMad(a,b,c)
  %442 = fadd fast float %441, %39
  %443 = fmul fast float %25, %19
  %444 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %443)  ; FMad(a,b,c)
  %445 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %444)  ; FMad(a,b,c)
  %446 = fadd fast float %445, %40
  %447 = fmul fast float %26, %19
  %448 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %447)  ; FMad(a,b,c)
  %449 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %448)  ; FMad(a,b,c)
  %450 = fadd fast float %449, %41
  %451 = fdiv fast float %438, %450
  %452 = fdiv fast float %442, %450
  %453 = fdiv fast float %446, %450
  %454 = call float @dx.op.unary.f32(i32 85, float %11)  ; DerivFineX(value)
  %455 = call float @dx.op.unary.f32(i32 85, float %12)  ; DerivFineX(value)
  %456 = call float @dx.op.unary.f32(i32 86, float %11)  ; DerivFineY(value)
  %457 = call float @dx.op.unary.f32(i32 86, float %12)  ; DerivFineY(value)
  %458 = call float @dx.op.unary.f32(i32 85, float %451)  ; DerivFineX(value)
  %459 = call float @dx.op.unary.f32(i32 85, float %452)  ; DerivFineX(value)
  %460 = call float @dx.op.unary.f32(i32 85, float %453)  ; DerivFineX(value)
  %461 = call float @dx.op.unary.f32(i32 86, float %451)  ; DerivFineY(value)
  %462 = call float @dx.op.unary.f32(i32 86, float %452)  ; DerivFineY(value)
  %463 = call float @dx.op.unary.f32(i32 86, float %453)  ; DerivFineY(value)
  %464 = fmul fast float %457, %454
  %465 = fmul fast float %456, %455
  %466 = fsub fast float %464, %465
  %467 = call float @dx.op.unary.f32(i32 6, float %466)  ; FAbs(value)
  %468 = fmul fast float %463, %459
  %469 = fmul fast float %462, %460
  %470 = fsub fast float %468, %469
  %471 = fmul fast float %461, %460
  %472 = fmul fast float %463, %458
  %473 = fsub fast float %471, %472
  %474 = fmul fast float %462, %458
  %475 = fmul fast float %461, %459
  %476 = fsub fast float %474, %475
  %477 = fmul fast float %470, %470
  %478 = fmul fast float %473, %473
  %479 = fmul fast float %476, %476
  %480 = fadd fast float %478, %479
  %481 = fadd fast float %480, %477
  %482 = call float @dx.op.unary.f32(i32 24, float %481)  ; Sqrt(value)
  %483 = call float @dx.op.binary.f32(i32 35, float %467, float 0x3DDB7CDFE0000000)  ; FMax(a,b)
  %484 = fdiv fast float %482, %483
  %485 = call float @dx.op.unary.f32(i32 24, float %484)  ; Sqrt(value)
  %486 = call float @dx.op.unary.f32(i32 23, float %432)  ; Log(value)
  %487 = call float @dx.op.unary.f32(i32 23, float %485)  ; Log(value)
  %488 = fsub fast float %486, %487
  %489 = call float @dx.op.binary.f32(i32 35, float %488, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %490 = call float @dx.op.binary.f32(i32 36, float %489, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %491 = call float @dx.op.binary.f32(i32 36, float %490, float %430)  ; FMin(a,b)
  %492 = call float @dx.op.binary.f32(i32 35, float %490, float %431)  ; FMax(a,b)
  br label %493

; <label>:493                                     ; preds = %434, %429
  %494 = phi float [ %491, %434 ], [ %430, %429 ]
  %495 = phi float [ %492, %434 ], [ %431, %429 ]
  %496 = extractvalue %dx.types.CBufRet.f32 %196, 3
  %497 = fcmp fast ogt float %496, 0.000000e+00
  br i1 %497, label %498, label %557

; <label>:498                                     ; preds = %493
  %499 = fmul fast float %23, %19
  %500 = call float @dx.op.tertiary.f32(i32 46, float %20, float %28, float %499)  ; FMad(a,b,c)
  %501 = call float @dx.op.tertiary.f32(i32 46, float %21, float %33, float %500)  ; FMad(a,b,c)
  %502 = fadd fast float %501, %38
  %503 = fmul fast float %24, %19
  %504 = call float @dx.op.tertiary.f32(i32 46, float %20, float %29, float %503)  ; FMad(a,b,c)
  %505 = call float @dx.op.tertiary.f32(i32 46, float %21, float %34, float %504)  ; FMad(a,b,c)
  %506 = fadd fast float %505, %39
  %507 = fmul fast float %25, %19
  %508 = call float @dx.op.tertiary.f32(i32 46, float %20, float %30, float %507)  ; FMad(a,b,c)
  %509 = call float @dx.op.tertiary.f32(i32 46, float %21, float %35, float %508)  ; FMad(a,b,c)
  %510 = fadd fast float %509, %40
  %511 = fmul fast float %26, %19
  %512 = call float @dx.op.tertiary.f32(i32 46, float %20, float %31, float %511)  ; FMad(a,b,c)
  %513 = call float @dx.op.tertiary.f32(i32 46, float %21, float %36, float %512)  ; FMad(a,b,c)
  %514 = fadd fast float %513, %41
  %515 = fdiv fast float %502, %514
  %516 = fdiv fast float %506, %514
  %517 = fdiv fast float %510, %514
  %518 = call float @dx.op.unary.f32(i32 85, float %13)  ; DerivFineX(value)
  %519 = call float @dx.op.unary.f32(i32 85, float %14)  ; DerivFineX(value)
  %520 = call float @dx.op.unary.f32(i32 86, float %13)  ; DerivFineY(value)
  %521 = call float @dx.op.unary.f32(i32 86, float %14)  ; DerivFineY(value)
  %522 = call float @dx.op.unary.f32(i32 85, float %515)  ; DerivFineX(value)
  %523 = call float @dx.op.unary.f32(i32 85, float %516)  ; DerivFineX(value)
  %524 = call float @dx.op.unary.f32(i32 85, float %517)  ; DerivFineX(value)
  %525 = call float @dx.op.unary.f32(i32 86, float %515)  ; DerivFineY(value)
  %526 = call float @dx.op.unary.f32(i32 86, float %516)  ; DerivFineY(value)
  %527 = call float @dx.op.unary.f32(i32 86, float %517)  ; DerivFineY(value)
  %528 = fmul fast float %521, %518
  %529 = fmul fast float %520, %519
  %530 = fsub fast float %528, %529
  %531 = call float @dx.op.unary.f32(i32 6, float %530)  ; FAbs(value)
  %532 = fmul fast float %527, %523
  %533 = fmul fast float %526, %524
  %534 = fsub fast float %532, %533
  %535 = fmul fast float %525, %524
  %536 = fmul fast float %527, %522
  %537 = fsub fast float %535, %536
  %538 = fmul fast float %526, %522
  %539 = fmul fast float %525, %523
  %540 = fsub fast float %538, %539
  %541 = fmul fast float %534, %534
  %542 = fmul fast float %537, %537
  %543 = fmul fast float %540, %540
  %544 = fadd fast float %542, %543
  %545 = fadd fast float %544, %541
  %546 = call float @dx.op.unary.f32(i32 24, float %545)  ; Sqrt(value)
  %547 = call float @dx.op.binary.f32(i32 35, float %531, float 0x3DDB7CDFE0000000)  ; FMax(a,b)
  %548 = fdiv fast float %546, %547
  %549 = call float @dx.op.unary.f32(i32 24, float %548)  ; Sqrt(value)
  %550 = call float @dx.op.unary.f32(i32 23, float %496)  ; Log(value)
  %551 = call float @dx.op.unary.f32(i32 23, float %549)  ; Log(value)
  %552 = fsub fast float %550, %551
  %553 = call float @dx.op.binary.f32(i32 35, float %552, float 0xBFFFD70A40000000)  ; FMax(a,b)
  %554 = call float @dx.op.binary.f32(i32 36, float %553, float 0x3FFFD70A40000000)  ; FMin(a,b)
  %555 = call float @dx.op.binary.f32(i32 36, float %554, float %494)  ; FMin(a,b)
  %556 = call float @dx.op.binary.f32(i32 35, float %554, float %495)  ; FMax(a,b)
  br label %557

; <label>:557                                     ; preds = %498, %493
  %558 = phi float [ %555, %498 ], [ %494, %493 ]
  %559 = phi float [ %556, %498 ], [ %495, %493 ]
  %560 = fptosi float %19 to i32
  %561 = fptosi float %20 to i32
  %562 = xor i32 %561, %560
  %563 = and i32 %562, 8
  %564 = icmp eq i32 %563, 0
  %565 = select i1 %564, float %558, float %559
  %566 = call float @dx.op.unary.f32(i32 6, float %565)  ; FAbs(value)
  %567 = fcmp fast une float %566, 1.024000e+03
  br i1 %567, label %568, label %592

; <label>:568                                     ; preds = %557
  %569 = call float @dx.op.unary.f32(i32 27, float %565)  ; Round_ni(value)
  %570 = fadd fast float %569, 2.000000e+00
  %571 = fptosi float %570 to i32
  %572 = call float @dx.op.unary.f32(i32 22, float %565)  ; Frc(value)
  %573 = add i32 %571, 8
  %574 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %573)  ; CBufferLoadLegacy(handle,regIndex)
  %575 = extractvalue %dx.types.CBufRet.f32 %574, 0
  %576 = extractvalue %dx.types.CBufRet.f32 %574, 1
  %577 = extractvalue %dx.types.CBufRet.f32 %574, 2
  %578 = add i32 %571, 7
  %579 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %578)  ; CBufferLoadLegacy(handle,regIndex)
  %580 = extractvalue %dx.types.CBufRet.f32 %579, 0
  %581 = extractvalue %dx.types.CBufRet.f32 %579, 1
  %582 = extractvalue %dx.types.CBufRet.f32 %579, 2
  %583 = fsub fast float %575, %580
  %584 = fsub fast float %576, %581
  %585 = fsub fast float %577, %582
  %586 = fmul fast float %583, %572
  %587 = fmul fast float %584, %572
  %588 = fmul fast float %585, %572
  %589 = fadd fast float %586, %580
  %590 = fadd fast float %587, %581
  %591 = fadd fast float %588, %582
  br label %592

; <label>:592                                     ; preds = %568, %557, %240, %211
  %593 = phi float [ %300, %240 ], [ 0x3F8EB851E0000000, %211 ], [ %589, %568 ], [ 0x3F8EB851E0000000, %557 ]
  %594 = phi float [ %301, %240 ], [ 0x3F8EB851E0000000, %211 ], [ %590, %568 ], [ 0x3F8EB851E0000000, %557 ]
  %595 = phi float [ %302, %240 ], [ 0x3F8EB851E0000000, %211 ], [ %591, %568 ], [ 0x3F8EB851E0000000, %557 ]
  %596 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %597 = extractvalue %dx.types.CBufRet.f32 %596, 2
  br label %675

; <label>:598                                     ; preds = %190
  %599 = add i32 %43, -7
  %600 = icmp ult i32 %599, 2
  br i1 %600, label %601, label %608

; <label>:601                                     ; preds = %598
  %602 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %603 = extractvalue %dx.types.CBufRet.i32 %602, 1
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %675

; <label>:605                                     ; preds = %601
  %606 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %607 = extractvalue %dx.types.CBufRet.f32 %606, 2
  br label %675

; <label>:608                                     ; preds = %598
  %609 = add i32 %43, -9
  %610 = icmp ult i32 %609, 2
  br i1 %610, label %611, label %614

; <label>:611                                     ; preds = %608
  %612 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %613 = extractvalue %dx.types.CBufRet.f32 %612, 2
  br label %675

; <label>:614                                     ; preds = %608
  %615 = icmp eq i32 %43, 11
  br i1 %615, label %616, label %646

; <label>:616                                     ; preds = %614
  %617 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %618 = extractvalue %dx.types.CBufRet.i32 %617, 3
  %619 = add i32 %618, 12
  %620 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 %619)  ; CBufferLoadLegacy(handle,regIndex)
  %621 = extractvalue %dx.types.CBufRet.f32 %620, 0
  %622 = extractvalue %dx.types.CBufRet.f32 %620, 1
  %623 = extractvalue %dx.types.CBufRet.f32 %620, 2
  %624 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %625 = extractvalue %dx.types.CBufRet.f32 %624, 0
  %626 = extractvalue %dx.types.CBufRet.f32 %624, 1
  %627 = extractvalue %dx.types.CBufRet.f32 %624, 2
  %628 = extractvalue %dx.types.CBufRet.f32 %624, 3
  %629 = fadd fast float %626, -2.000000e+01
  %630 = fmul fast float %629, %625
  %631 = fmul fast float %627, %625
  %632 = fmul fast float %628, %625
  %633 = fadd fast float %630, 2.000000e+01
  %634 = call float @dx.op.binary.f32(i32 35, float %633, float 0.000000e+00)  ; FMax(a,b)
  %635 = call float @dx.op.binary.f32(i32 35, float %631, float 0.000000e+00)  ; FMax(a,b)
  %636 = call float @dx.op.binary.f32(i32 35, float %632, float 0.000000e+00)  ; FMax(a,b)
  %637 = fadd fast float %634, 0x3FCBA15120000000
  %638 = fadd fast float %635, 0x3FCBA15120000000
  %639 = fadd fast float %636, 0x3FCBA15120000000
  %640 = call float @dx.op.dot3.f32(i32 55, float %637, float %638, float %639, float 0x3FCB37C140000000, float 0x3FE6E2A960000000, float 0x3FB27B3220000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %641 = fmul fast float %640, 0x3FEE666660000000
  %642 = fadd fast float %641, 0x3FA99999A0000000
  %643 = fmul fast float %642, %621
  %644 = fmul fast float %642, %622
  %645 = fmul fast float %642, %623
  br label %675

; <label>:646                                     ; preds = %614
  %647 = icmp eq i32 %43, 12
  br i1 %647, label %648, label %675

; <label>:648                                     ; preds = %646
  %649 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %9, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %650 = extractvalue %dx.types.CBufRet.f32 %649, 0
  %651 = extractvalue %dx.types.CBufRet.f32 %649, 1
  %652 = extractvalue %dx.types.CBufRet.f32 %649, 2
  %653 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %654 = extractvalue %dx.types.CBufRet.f32 %653, 0
  %655 = extractvalue %dx.types.CBufRet.f32 %653, 1
  %656 = extractvalue %dx.types.CBufRet.f32 %653, 2
  %657 = extractvalue %dx.types.CBufRet.f32 %653, 3
  %658 = fadd fast float %655, -2.000000e+01
  %659 = fmul fast float %658, %654
  %660 = fmul fast float %656, %654
  %661 = fmul fast float %657, %654
  %662 = fadd fast float %659, 2.000000e+01
  %663 = call float @dx.op.binary.f32(i32 35, float %662, float 0.000000e+00)  ; FMax(a,b)
  %664 = call float @dx.op.binary.f32(i32 35, float %660, float 0.000000e+00)  ; FMax(a,b)
  %665 = call float @dx.op.binary.f32(i32 35, float %661, float 0.000000e+00)  ; FMax(a,b)
  %666 = fadd fast float %663, 0x3FCBA15120000000
  %667 = fadd fast float %664, 0x3FCBA15120000000
  %668 = fadd fast float %665, 0x3FCBA15120000000
  %669 = call float @dx.op.dot3.f32(i32 55, float %666, float %667, float %668, float 0x3FCB37C140000000, float 0x3FE6E2A960000000, float 0x3FB27B3220000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %670 = fmul fast float %669, 0x3FEE666660000000
  %671 = fadd fast float %670, 0x3FA99999A0000000
  %672 = fmul fast float %671, %650
  %673 = fmul fast float %671, %651
  %674 = fmul fast float %671, %652
  br label %675

; <label>:675                                     ; preds = %648, %646, %616, %611, %605, %601, %592, %184, %117, %56, %48
  %676 = phi float [ %185, %184 ], [ %593, %592 ], [ 0x3F6A866260000000, %611 ], [ %643, %616 ], [ %672, %648 ], [ 1.000000e+00, %646 ], [ 0x3F6A866260000000, %605 ], [ 2.560000e+02, %601 ], [ %123, %117 ], [ %53, %56 ], [ %53, %48 ]
  %677 = phi float [ %186, %184 ], [ %594, %592 ], [ 0x3F6A866260000000, %611 ], [ %644, %616 ], [ %673, %648 ], [ 0.000000e+00, %646 ], [ 0x3F6A866260000000, %605 ], [ 2.560000e+02, %601 ], [ %54, %117 ], [ %54, %56 ], [ %54, %48 ]
  %678 = phi float [ %187, %184 ], [ %595, %592 ], [ 0x3F6A866260000000, %611 ], [ %645, %616 ], [ %674, %648 ], [ 1.000000e+00, %646 ], [ 0x3F6A866260000000, %605 ], [ 2.560000e+02, %601 ], [ %55, %117 ], [ %55, %56 ], [ %55, %48 ]
  %679 = phi float [ %189, %184 ], [ %597, %592 ], [ %613, %611 ], [ 1.000000e+00, %616 ], [ 1.000000e+00, %648 ], [ 1.000000e+00, %646 ], [ %607, %605 ], [ 2.560000e+02, %601 ], [ 1.000000e+00, %117 ], [ 1.000000e+00, %56 ], [ 1.000000e+00, %48 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %676)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %677)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %678)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %679)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #1

; Function Attrs: nounwind
declare i32 @dx.op.atomicBinOp.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare i32 @dx.op.atomicCompareExchange.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!13}
!dx.entryPoints = !{!14}

!0 = !{!"dxc(private) 1.8.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 8}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{null, !5, !8, null}
!5 = !{!6}
!6 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 5}
!8 = !{!9, !10, !11, !12}
!9 = !{i32 0, %"$Globals"* undef, !"", i32 0, i32 0, i32 1, i32 80, null}
!10 = !{i32 1, %hostlayout.View* undef, !"", i32 0, i32 1, i32 1, i32 6012, null}
!11 = !{i32 2, %DebugViewModePass* undef, !"", i32 0, i32 2, i32 1, i32 324, null}
!12 = !{i32 3, %Material* undef, !"", i32 0, i32 3, i32 1, i32 28, null}
!13 = !{[32 x i32] [i32 30, i32 4, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0]}
!14 = !{void ()* @Main, !"Main", !15, !4, !37}
!15 = !{!16, !35, null}
!16 = !{!17, !20, !21, !24, !26, !28, !30, !32, !34}
!17 = !{i32 0, !"SV_Position", i8 9, i8 3, !18, i8 4, i32 1, i8 4, i32 0, i8 0, !19}
!18 = !{i32 0}
!19 = !{i32 3, i32 7}
!20 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 4, i32 1, i8 0, null}
!21 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !22, i8 2, i32 1, i8 4, i32 2, i8 0, !23}
!22 = !{i32 1}
!23 = !{i32 3, i32 15}
!24 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !25, i8 2, i32 1, i8 4, i32 3, i8 0, !23}
!25 = !{i32 2}
!26 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !27, i8 2, i32 1, i8 3, i32 4, i8 0, null}
!27 = !{i32 3}
!28 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !29, i8 2, i32 1, i8 3, i32 5, i8 0, null}
!29 = !{i32 4}
!30 = !{i32 6, !"TEXCOORD", i8 9, i8 0, !31, i8 2, i32 1, i8 3, i32 6, i8 0, null}
!31 = !{i32 5}
!32 = !{i32 7, !"SV_PrimitiveID", i8 5, i8 10, !18, i8 1, i32 1, i8 1, i32 7, i8 0, !33}
!33 = !{i32 3, i32 1}
!34 = !{i32 8, !"SV_IsFrontFace", i8 5, i8 13, !18, i8 1, i32 1, i8 1, i32 7, i8 1, null}
!35 = !{!36}
!36 = !{i32 0, !"SV_Target", i8 9, i8 16, !18, i8 0, i32 1, i8 4, i32 0, i8 0, !23}
!37 = !{i32 0, i64 8, i32 5, !18}
!38 = distinct !{!38, !"dx.controlflow.hints", i32 1}
!39 = distinct !{!39, !"dx.controlflow.hints", i32 1}
!40 = distinct !{!40, !"dx.controlflow.hints", i32 1}
!41 = distinct !{!41, !"dx.controlflow.hints", i32 1}
!42 = distinct !{!42, !"dx.controlflow.hints", i32 1}
!43 = distinct !{!43, !"dx.controlflow.hints", i32 1}
!44 = distinct !{!44, !"dx.controlflow.hints", i32 1}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.unroll.disable"}
!47 = distinct !{!47, !"dx.controlflow.hints", i32 1}
!48 = distinct !{!48, !"dx.controlflow.hints", i32 2}
!49 = distinct !{!49, !"dx.controlflow.hints", i32 2}
!50 = distinct !{!50, !"dx.controlflow.hints", i32 2}
!51 = distinct !{!51, !"dx.controlflow.hints", i32 2}
!52 = distinct !{!52, !"dx.controlflow.hints", i32 2}
